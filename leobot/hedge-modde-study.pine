// Greeffer's Long Strategy
// @version=4
// @Greeffer

// S T U D Y
study(shorttitle="Hedge Study", title="Greeffer's Hedge Mode Study", overlay=true)

// S T R A T E G Y 
//strategy(
//     "Greeffer's Hedge Mode Strategy",
//     "Hedge Strategy",
//     overlay=true, 
//     pyramiding=10,
//     default_qty_type=strategy.percent_of_equity,
//     default_qty_value=200,
//     initial_capital=5000,
//     commission_type=strategy.commission.percent,
//     commission_value=0.01,
//     margin_long=1./20*50, 
//     margin_short=1./20*50
//     )

// I N P U T S
longOrShort = input(title="Long", type=input.bool, defval=true, tooltip="Uncheck to Short") //<-------- todo: get rid of this var
entryAmount = input(title="Entry Amount", type=input.float, defval=0.001, step=0.001) //<---------------todo: handle position size in azure
exitAmount = input(title="Exit Amount", type=input.float, defval=0.001, step=0.001)  //<----------------todo: handle position size in azure
volumeMA = input(title="volume ma period", type=input.integer, defval=200) //<----------------------------not being used
volMultiplyer = input(title="volume multiplyer", type=input.integer, defval=10) //<-----------------------not being used
donchianupper = input(title="upper donchian channel period", type=input.integer, defval=1440)
donchianlower = input(title="lower donchian channel period", type=input.integer, defval=1440)
stops = input(title="stops", type=input.float, defval=500.00, step=0.01) //<------------------ using upper/lower instead for hedge mode

// V A R S
symbol = "BTCUSDT" //symbol = "ETHUSDT"
short = false
long = false
stopshort = close + stops //<-------------------------------------------------------------------------not being used
stoplong = close - stops //<--------------------------------------------------------------------------not being used

//----------------------?
//symbol = syminfo.ticker

// D O N C H I A N   C H A N N E L S
lower = lowest(donchianlower)
upper = highest(donchianupper)
middle= (upper-lower)/2+lower
plot(middle, title='Middle', color=color.green, linewidth=1)
plot(upper, title='Upper', color=color.orange, linewidth=1)
plot(lower, title='Lower', color=color.orange, linewidth=1)

// S M A
//plot(sma(close,sma)) //<---------------------------------------------------------------------------not being used

// V O L U M E //<-----------------------------------------------------------------------------------not being used
volMA = sma(volume, 200)
//upperVol = highest(volume, 200)
upperVol = volMA*volMultiplyer

// E N T R Y / E X I T   C o n d i t i o n s 
// S h o r t
if high>=upper// and volume>upperVol <------------------------------------------------------------ changed
    short:=true
else 
    short:=false

// L o n g :
if low<=lower// and volume>upperVol <------------------------------------------------------------ changed
    long:=true
else
    long:=false

// O R D E R S :
// L o n g
if long==true and longOrShort==true
    alert(message='{"side":"longHedge","stopPrice":"'+tostring(round(lower))+'","middle":"'+tostring(round(middle))+'","symbol":"'+symbol+'","close":"'+tostring(close)+'","amount":"'+tostring(entryAmount)+'"}', freq=alert.freq_once_per_bar_close)
    //strategy.order("long", long=true, limit=lower, oca_name="order", stop=stoplong, comment="long", when=long)

if short==true and longOrShort==true
    alert(message='{"side":"closeLong","middle":"'+tostring(round(middle))+'","symbol":"'+symbol+'","close":"'+tostring(close)+'","amount":"'+tostring(exitAmount)+'"}', freq=alert.freq_once_per_bar_close)
    //strategy.close("long", comment="close-long", qty_percent=100, when=short)

// S h o r t
if short==true and longOrShort==false
    alert(message='{"side":"shortHedge","stopPrice":"'+tostring(round(upper))+'","middle":"'+tostring(round(middle))+'","symbol":"'+symbol+'","close":"'+tostring(close)+'","amount":"'+tostring(entryAmount)+'"}', freq=alert.freq_once_per_bar_close)
    // strategy.order("short", long=false, limit=upper, oca_name="order", stop=stopshort, comment="short", when=short)

if long==true and longOrShort==false
    alert(message='{"side":"closeShort","middle":"'+tostring(round(middle))+'","symbol":"'+symbol+'","close":"'+tostring(close)+'","amount":"'+tostring(exitAmount)+'"}', freq=alert.freq_once_per_bar_close)
    //strategy.close("short", comment="close-short", qty_percent=100, when=long)
