// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© Greeffer

//@version=5

// S T U D Y
// indicator(shorttitle="bbWidth Hedge Indicator", title="Bollinger Bands Width Indicator", precision=6, overlay=false)


// S T R A T E G Y 
strategy(
     "Greeffer's Bolinger Band Hedge Strategy",
     "bbWidth Hedge Strategy",
     overlay=true, 
     precision=6,
     pyramiding=2,
     default_qty_type=strategy.percent_of_equity,
     default_qty_value=200,
     initial_capital=5000,
     commission_type=strategy.commission.percent,
     commission_value=0.01,
     margin_long=1./20*50, 
     margin_short=1./20*50
     )


length = input.int(40, minval=1)
src = input(close, title="Source")
mult = input.float(6.0, minval=0.001, maxval=50, title="StdDev")
entryCondition = false
longExitCondition = false
shortExitCondition = false


// B O L L I N G E R   B A N D S
basis = ta.sma(src, length)
dev = mult * ta.stdev(src, length)
upper = basis + dev
lower = basis - dev


// B B W I D T H
bbWidth = ta.bbw(src, length, mult)


// SMA
bbWidthSMA = ta.sma(bbWidth, 100)


// D O N C H I A N   C H A N N E L S
donUpper = ta.highest(length)
donLower = ta.lowest(length)


// P L O T S
plot(bbWidthSMA, "bbWidthSMA", color=color.yellow)
// plot(basis, "Basis", color=#FF6D00)
// p1 = plot(upper, "Upper", color=color.rgb(150, 33, 243, 25))
// p2 = plot(lower, "Lower", color=color.rgb(33, 150, 243, 25))
// fill(p1, p2, title = "Background", color=color.rgb(33, 150, 243, 95))
plot(bbWidth, "bbWidth",  color=color.rgb(150, 33, 243, 20))
//plot(ta.highest(100), color=color.yellow)
//plot(ta.lowest(100), color=color.yellow)


// C O N D I T I O N S
// Entries:
var longEntryCondition = false
var shortEntryCondition = false

// Long:
if ta.crossover(close, upper) and bbWidth<bbWidthSMA
    longEntryCondition := true
else
    longEntryCondition := false

// Short:
if ta.crossunder(close, lower) and bbWidth<bbWidthSMA
    shortEntryCondition := true
else
    shortEntryCondition := false

// Exit:
// Long
if ta.crossunder(bbWidth, bbWidthSMA)
    longExitCondition:=true
    shortExitCondition:=true
// else
//     longExitCondition:=false

// // Short
// if ta.crossover(close, upper)
//     shortExitCondition:=true
// else
//     shortExitCondition:=false


// E N T R I E S
var longPosition = false  //<-------------------------------------------maybe plot this somehow instead?
var shortPosition = false //<-------------------------------------------maybe plot this somehow instead?

// Long:
if (longEntryCondition)
    strategy.entry("long", strategy.long)
    //longPosition:=true

// Short:
if (shortEntryCondition)
    strategy.entry("short", strategy.short)
    //shortPosition:=true

// Exits:
if (longExitCondition)
    strategy.close("long", when=shortExitCondition, comment="exitLong", qty_percent=100)//, trail_price=donUpper, trail_offset=10000)
    // strategy.exit("exitLong", from_entry="long", qty_percent=100)//, trail_price=donUpper, trail_offset=10000)

if (shortExitCondition)
    strategy.close("short", when=shortExitCondition, comment="exitShort", qty_percent=100)//, trail_price=donUpper, trail_offset=10000)
    // // strategy.exit("exitShort", from_entry="short", qty_percent=100)//, trail_price=donUpper, trail_offset=10000)
